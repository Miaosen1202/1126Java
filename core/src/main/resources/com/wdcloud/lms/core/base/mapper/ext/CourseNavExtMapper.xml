<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wdcloud.lms.core.base.mapper.ext.CourseNavExtMapper">
    <resultMap id="BaseResultMap" type="com.wdcloud.lms.core.base.vo.CourseNavVO"
               extends="com.wdcloud.lms.core.base.mapper.CourseNavMapper.BaseResultMap">
        <result column="defaultName" jdbcType="VARCHAR" property="defaultName"/>
        <result column="localeName" jdbcType="VARCHAR" property="localeName"/>
    </resultMap>

    <select id="getNavs" resultMap="BaseResultMap">
        select sd.code,
        sd.name as defaultName,
        (select sdv.name from sys_dictionary_value sdv where sdv.dictionary_id = sd.id
        <if test="locale!=null">
            and locale = #{locale}
        </if>
        ) localeName,
        ccn.seq,
        ccn.status
        from sys_dictionary sd
        left join cos_course_nav ccn on sd.code = ccn.code
        WHERE ccn.course_id = #{courseId}
        <if test="status !=null">
            and ccn.status = #{status}
        </if>
        order by ccn.seq desc;
    </select>

    <insert id="batchInsert" useGeneratedKeys="true" keyProperty="id">
        insert into cos_course_nav (
          course_id,
          name,
          code,
          seq,
          status,
          create_user_id,
          update_user_id
        )
        values
        <foreach collection="list" item="item" separator=",">
            (
                #{item.courseId},
                #{item.name},
                #{item.code},
                #{item.seq},
                #{item.status},
                #{item.createUserId},
                #{item.updateUserId}
            )
        </foreach>
    </insert>

    <insert id="batchInsertOrUpdate">
        insert into cos_course_nav (
            id,
            course_id,
            name,
            code,
            seq,
            status,
            create_user_id,
            update_user_id
        )
        values
        <foreach collection="list" item="item" separator=",">
            (
                #{item.id},
                #{item.course_id},
                #{item.name},
                #{item.code},
                #{item.seq},
                #{item.status},
                #{item.create_user_id},
                #{item.update_user_id}
            )
        </foreach>
        on duplicate key update
            course_id = values(course_id),
            name = values(name),
            code = values(code),
            seq = values(seq),
            status = values(status),
            update_user_id = values(update_user_id)
    </insert>
</mapper>