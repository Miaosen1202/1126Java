quiz.default.title=Unnamed quiz
assignment-group.default.name=assignments


# business tip
assign.due-time.after.end-time=Due time cannot be after available end time
assign.due-time.before.start-time=Due time cannot be before available start time
assign.start-time.after.end-time=Available start time cannot not be after end time


assign.start-time.before.section-start-time=Available start time cannot  be before the section start time
assign.start-time.after.section-end-time=Available start time cannot  be after the section end time

assign.end-time.before.section-start-time=Available end time cannot be before the section start time
assign.end-time.after.section-end-time=Available end time cannot  be after the section end time

assign.due-time.before.section-start-time=Available due time cannot be before the section start time
assign.due-time.after.section-end-time=Available due time cannot be after the section end time


assign.start-time.before.course-start-time=Available start time cannot be before the course start time
assign.start-time.after.course-end-time=Available start time cannot be after the course end time

assign.end-time.before.course-start-time=Available end time cannot  be before the course start time
assign.end-time.after.course-end-time=Available end time cannot  be after the course end time

assign.due-time.before.course-start-time=Available due time cannot  be before the course start time
assign.due-time.after.course-end-time=Available due time cannot  be after course end time


assign.start-time.before.term-start-time=Available start time cannot  be before the term start time
assign.start-time.after.term-end-time=Available start time cannot  be after term end time

assign.end-time.before.term-start-time=Available start time cannot  be before the term start time
assign.end-time.after.term-end-time=Available after time cannot  be end the term start time

assign.due-time.before.term-start-time=Available due time cannot be before the term start time
assign.due-time.after.term-end-time=Available due time cannot be after term end time


assign.duplicate.for.all=Assign for all is duplicate
assign.duplicate.for.section=Assign for section id "{0}" is duplicate
assign.duplicate.for.user=Assign for user id "{0}" is duplicate

assign.type.unregistered=Unregistered assign type "{0}"
assign.section.id.null=Assign section's id can't be null
assign.user.id.null=Assign user's id can't be null

assign.section.invalid=Assign section id "{0}" is invalid 

#讨论 tip
discussion.course.assign.null=course discussion's assign is null

group-member-limit.not.less.than=Study group number can not less than {0} 
user.exists.in.group=User has add to group

user.cannot.remove.all.section=Can't remove user all section

sis.import.org.process=Org has process sis import
sis.import.unknown-file-type={0} – Skipping unknown file type
sis.import.org.sis-id.required=Sis import data need org set sis id first
sis.valid.file.empty=Sis import valid file is empty

# common tip
operate.permission.denied=You need permission to perform this operation
operate.rejected=Your operation was rejected
prop.value.unregistered=Property "{0}" value "{1}" is unregistered
prop.value.not-exists=Property "{0}" value "{1}" is not exists
resource.not-found=Resource is not found
prop.value.exists=Property "{0}" value "{1}" is exists
prop.value.exists2={0} {1} have been used, please change one
resource.already.use="{0}" is already in use
course.unpublish.forbid.grade-item.submit=Course forbid unpublish after grade item has submitted
common.success=Succès
already.submit=Can't unpublished this assignment if there are student submissions

# default value
student-study-group-set-name=Student Groups
assignment.reply.file.invalid=Invalid file type
assignment.add.submissionType.null=Please choose at least one submission type
assignment.add.submissionType.fileLimit.null=Fill in the type of uploaded file
#login
login.error=username or password is error
login.role.error=login role is error
login.disable.error=user is disable
file.name.exists=file name  exists
study-group-set.name.exists={0} is already in use
create-course-but-not-in-school=You are not a teacher of a school, so you can not create courses.
org-sis-id-exists=Org sis id is exists
org-forbid-change-school-to-other=Forbid change org type from school to other
org-school-type-forbid-has-sub-school-type=School org can't be has sub school org
at_least_one_grouping=At least one grouping

#file
file.not-exist.error=the selected file or folder do not exist
file.path.same.error=selected paths is same
file.not-directory.error=target is not a directory
calling_too_frequently=calling too frequently!
op.unpublish.has.commit.error=Can't unpublished this diccussion  if there are students submissions!

#live
live.add.user.nonExists=when add live, user don't exist
live.add.createLiveUser.failed=when add live and create live user, fail
live.add.createLive.failed=when add live and create live, fail
live.update.live.nonExists=when update live, live don't exist
live.update.updateLive.failed=when update live and update live, fail
live.delete.live.nonExists=when delete live, live don't exist
live.find.liveDetail.nonExists=when find live, live don't exist
live.add.live.exists={0} already exists
live.end.live.nonExists=when end live, live don't exist
live.syncVod.syncVod.failed=when sync vod, fail
live.syncLiveHistory.syncLiveHistory.failed=when sync live history, fail
live.syncVodHistory.syncVodHistory.failed=when sync vod history, fail
live.delete.startTime.out=this live is started

#module
complete.assignment.moduleItemUser.nonExists=when complete assignment, the moduleItemUser don't exist
complete.assignment.moduleUser.nonExists=when complete assignment, the moduleUser don't exist

userSetting.modify.oldPassword.error=Old password error!
userSetting.modify.userLink.title.required=Title is required
userSetting.modify.userLink.url.required=Url is required