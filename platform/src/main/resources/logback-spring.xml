<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <include resource="org/springframework/boot/logging/logback/base.xml"/>
    <property name="LOG_HOME" value="/var/log"/>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">

        <!-- 日志日常打印文件 -->
        <file>${LOG_HOME}/${artifactId}.log</file>
        <!--<file>/var/log/2018-05-15/inspos-dm-ppcp2/mylog.log</file>-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--<fileNamePattern>${LOG_HOME}/%d{yyyy-MM-dd}/${artifactId}/${artifactId}.%i.log.gz</fileNamePattern>-->
            <fileNamePattern>${LOG_HOME}/${parent.artifactId}/${artifactId}.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
            <!-- 如果按天来回滚，则最大保存时间为365天，365天之前的都将被清理掉 -->
            <maxHistory>30</maxHistory>
            <!-- 日志总保存量为10GB -->
            <totalSizeCap>10GB</totalSizeCap>
            <!--<timeBasedFileNamingAndTriggeringPolicy-->
                    <!--class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
                <!--&lt;!&ndash;文件达到 最大1MB时会被压缩和切割 &ndash;&gt;-->
                <!--<maxFileSize>10MB</maxFileSize>-->
            <!--</timeBasedFileNamingAndTriggeringPolicy>-->
        </rollingPolicy>

        <!--<filter class="ch.qos.logback.classic.filter.ThresholdFilter">-->
            <!--<level>DEBUG</level>-->
        <!--</filter>-->

        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            <!--<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger{50} - %msg%n</pattern>-->
            <!-- 此处设置字符集 -->
            <charset>UTF-8</charset>
        </encoder>

        <!-- Safely log to the same file from multiple JVMs. Degrades performance! -->
        <prudent>false</prudent>
    </appender>

    <!-- 异步输出 -->
    <appender name="ASYNC-STDOUT" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="STDOUT"/>
    </appender>

    <!-- 异步输出 -->
    <appender name="ASYNC-FILE" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="FILE"/>
    </appender>

    <springProfile name="dev">
        <logger name="com.wdcloud" level="DEBUG" additivity="false">
            <appender-ref ref="ASYNC-STDOUT"/>
            <appender-ref ref="ASYNC-FILE"/>
        </logger>
        <!--<logger name="com.ibatis" level="DEBUG" additivity="false">-->
            <!--<appender-ref ref="FILE"/>-->
        <!--</logger>-->
        <!--<logger name="java.sql" level="DEBUG" additivity="false">-->
            <!--<appender-ref ref="FILE"/>-->
        <!--</logger>-->
    </springProfile>

    <springProfile name="stable">
        <logger name="com.wdcloud" level="DEBUG" additivity="false">
            <appender-ref ref="ASYNC-FILE"/>
            <appender-ref ref="ASYNC-STDOUT"/>
        </logger>
        <!--<logger name="com.ibatis" level="DEBUG" additivity="false">-->
            <!--<appender-ref ref="FILE"/>-->
        <!--</logger>-->
        <!--<logger name="java.sql" level="DEBUG" additivity="false">-->
            <!--<appender-ref ref="FILE"/>-->
        <!--</logger>-->
    </springProfile>

    <springProfile name="bench">
        <logger name="com.wdcloud" level="INFO" additivity="false">
            <appender-ref ref="ASYNC-FILE"/>
        </logger>
    </springProfile>

    <springProfile name="prod">
        <logger name="com.wdcloud" level="INFO" additivity="false">
            <appender-ref ref="ASYNC-FILE"/>
        </logger>
    </springProfile>

    <root>
        <appender-ref ref="ASYNC-FILE"/>
    </root>
</configuration>
